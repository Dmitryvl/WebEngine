@*
	-----------------------------------------------------------------------
		<copyright file="Profile.cs" author="Dzmitry Prakapenka">
			All rights reserved.
		</copyright>
	-----------------------------------------------------------------------
*@

@model WebEngine.Web.ViewModels.Product.ProductPageView

@{
	ViewData["Title"] = Model.CategoryViewName;
}

<div class="col-sm-3">
	<div class="left-sidebar">
		<h2>filter</h2>
		<div class="panel-group category-products" id="accordian">
			@*@await Component.InvokeAsync("FilterView", new { category = Model.CategoryName })*@

			@Html.Partial("_ProductFilter", Model.FilterItems)
		</div>
	</div>
</div>
<div class="col-sm-9 padding-right">
	<div class="features_items">
		<h2 class="title text-center">@Model.CategoryViewName</h2>
		@foreach (var product in Model.Products)
		{
			<div class="col-sm-4">
				<div class="product-image-wrapper">
					<div class="single-products">
						<div class="productinfo text-center">
							@*<img src="~/images/No_image.png" alt="" />*@
							<h2>@product.CompanyName @product.Name</h2>
							<p>@product.ShortInfo</p>
							@*<a href="#" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>*@
						</div>
					</div>
					<div class="choose">
						<ul class="nav nav-pills nav-justified">
							@*<li><a href="#"><i class="fa fa-plus-square"></i>Add to wishlist</a></li>*@
							<li>
								<a asp-action="GetProduct" asp-controller="Product" asp-route-category="@Model.CategoryName" asp-route-urlName="@product.UrlName">
									<i class="fa fa-plus-square"></i>More...
								</a>
							</li>
						</ul>
					</div>
				</div>
			</div>
		}
	</div>

	<ul id="pagination" class="pagination-sm"></ul>

	@Html.HiddenFor(model => model.TotalPages, new { id = "totalPages" })
	@Html.HiddenFor(model => model.CurrentPage, new { id = "currentPage" })

</div>


@section Scripts {
	<script>

		let categoryId = @Model.CategoryId;

		let totalPages = @Model.TotalPages;

		let elements = @Html.Raw(Json.Serialize(Model.FilterItems.Select(m => new { PropertyId = m.PropertyId, FilterItemType = m.FilterItemType })));

		$('#pagination').twbsPagination({
			totalPages: totalPages,
			visiblePages: 7,
			onPageClick: function (event, page) {

			}
		});

		for(let i = 0; i < elements.length; i++) {

			if(elements[i].FilterItemType == 'DropDownList'){

				$('#'+elements[i].PropertyId).change(function(){
					let value = $('#'+elements[i].PropertyId).val();

					var model = {
						CategoryId: categoryId,
						Properties: [
							{ "Id": elements[i].PropertyId, "Value": value, "IsRange" : false },
							//{ "Id": 4, "Value": "11", "IsRange" : false }
						],
					}

					var filter = JSON.stringify(model)

					$.ajax({
						type: 'POST',
						url: '/Product/Index',
						contentType: 'application/json; charset=utf-8',
						data: filter
					}).success(function (data) {
						alert("ok");
					}).fail(function (data) {
						alert("ошибка");
					});
				});

			} else if(elements[i].FilterItemType == 'Range'){


			}
		}

		function GrabFilter(){
			
		}

	</script>
}